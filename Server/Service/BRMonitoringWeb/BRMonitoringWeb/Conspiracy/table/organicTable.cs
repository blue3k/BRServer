//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 
namespace GameTbl {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class OrganicTbl {
        
        private OrganicTblOrganicItem[] organicItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OrganicItem")]
        public OrganicTblOrganicItem[] OrganicItem {
            get {
                return this.organicItemField;
            }
            set {
                this.organicItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class OrganicTblOrganicItem {
        
        private int organicItemIDField;
        
        private string itemInfoField;
        
        private int requiredGemField;
        
        private int requiredGameMoneyField;
        
        private OrganicTblOrganicItemItemEffect itemEffectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int OrganicItemID {
            get {
                return this.organicItemIDField;
            }
            set {
                this.organicItemIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemInfo {
            get {
                return this.itemInfoField;
            }
            set {
                this.itemInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RequiredGem {
            get {
                return this.requiredGemField;
            }
            set {
                this.requiredGemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RequiredGameMoney {
            get {
                return this.requiredGameMoneyField;
            }
            set {
                this.requiredGameMoneyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public OrganicTblOrganicItemItemEffect ItemEffect {
            get {
                return this.itemEffectField;
            }
            set {
                this.itemEffectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum OrganicTblOrganicItemItemEffect {
        
        /// <remarks/>
        ResetRankNormal,
        
        /// <remarks/>
        NickName,
        
        /// <remarks/>
        ReStart,
        
        /// <remarks/>
        Revival,
        
        /// <remarks/>
        Check,
        
        /// <remarks/>
        RoleChoice,
    }
}
