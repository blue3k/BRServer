//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BR {

public class GameLogPlayerKilled : GameLogItem {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal GameLogPlayerKilled(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BRMonitoringPINVOKE.GameLogPlayerKilled_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GameLogPlayerKilled obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public unsafe ulong KilledPlayerID {
    set {
      BRMonitoringPINVOKE.GameLogPlayerKilled_KilledPlayerID_set(swigCPtr, value);
    } 
    get {
      ulong ret = BRMonitoringPINVOKE.GameLogPlayerKilled_KilledPlayerID_get(swigCPtr);
      return ret;
    } 
  }

  public unsafe PlayerKilledReason killedReason {
    set {
      BRMonitoringPINVOKE.GameLogPlayerKilled_killedReason_set(swigCPtr, (int)value);
    } 
    get {
      PlayerKilledReason ret = (PlayerKilledReason)BRMonitoringPINVOKE.GameLogPlayerKilled_killedReason_get(swigCPtr);
      return ret;
    } 
  }

  public unsafe GameLogPlayerKilled(uint timeStamp) : this(BRMonitoringPINVOKE.new_GameLogPlayerKilled(timeStamp), true) {
  }

  public unsafe void SetPlayerKilled(PlayerKilledReason reason, ulong killedPlayerID) {
    BRMonitoringPINVOKE.GameLogPlayerKilled_SetPlayerKilled(swigCPtr, (int)reason, killedPlayerID);
  }

}

}
