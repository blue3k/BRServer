//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.6
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BR {

public class ArrayInt64 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ArrayInt64(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ArrayInt64 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ArrayInt64() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          BRMonitoringPINVOKE.delete_ArrayInt64(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public unsafe uint GetSize() {
    uint ret = BRMonitoringPINVOKE.ArrayInt64_GetSize(swigCPtr);
    return ret;
  }

  public unsafe uint size() {
    uint ret = BRMonitoringPINVOKE.ArrayInt64_size(swigCPtr);
    return ret;
  }

  public unsafe SWIGTYPE_p_Result SetSize(uint szNewSize) {
    SWIGTYPE_p_Result ret = new SWIGTYPE_p_Result(BRMonitoringPINVOKE.ArrayInt64_SetSize(swigCPtr, szNewSize), true);
    return ret;
  }

  public unsafe void resize(uint szNewSize) {
    BRMonitoringPINVOKE.ArrayInt64_resize(swigCPtr, szNewSize);
  }

  public unsafe void Clear() {
    BRMonitoringPINVOKE.ArrayInt64_Clear(swigCPtr);
  }

  public unsafe bool GetConserveDataOnResize() {
    bool ret = BRMonitoringPINVOKE.ArrayInt64_GetConserveDataOnResize(swigCPtr);
    return ret;
  }

  public unsafe void SetConserveDataOnResize(bool conserveDataOnResize) {
    BRMonitoringPINVOKE.ArrayInt64_SetConserveDataOnResize(swigCPtr, conserveDataOnResize);
  }

  public unsafe uint GetAllocatedSize() {
    uint ret = BRMonitoringPINVOKE.ArrayInt64_GetAllocatedSize(swigCPtr);
    return ret;
  }

  public unsafe uint GetIncreaseSize() {
    uint ret = BRMonitoringPINVOKE.ArrayInt64_GetIncreaseSize(swigCPtr);
    return ret;
  }

  public unsafe void SetIncreaseSize(uint szNewIncSize) {
    BRMonitoringPINVOKE.ArrayInt64_SetIncreaseSize(swigCPtr, szNewIncSize);
  }

  public unsafe SWIGTYPE_p_Result Reserve(uint szReserv) {
    SWIGTYPE_p_Result ret = new SWIGTYPE_p_Result(BRMonitoringPINVOKE.ArrayInt64_Reserve(swigCPtr, szReserv), true);
    return ret;
  }

  public unsafe SWIGTYPE_p_signed___int64 data() {
    global::System.IntPtr cPtr = BRMonitoringPINVOKE.ArrayInt64_data(swigCPtr);
    SWIGTYPE_p_signed___int64 ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_signed___int64(cPtr, false);
    return ret;
  }

  public unsafe SWIGTYPE_p_Result push_back(SWIGTYPE_p_signed___int64 NewData) {
    SWIGTYPE_p_Result ret = new SWIGTYPE_p_Result(BRMonitoringPINVOKE.ArrayInt64_push_back(swigCPtr, SWIGTYPE_p_signed___int64.getCPtr(NewData)), true);
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public unsafe SWIGTYPE_p_Result AddItems(uint numItems, SWIGTYPE_p_signed___int64 NewData) {
    SWIGTYPE_p_Result ret = new SWIGTYPE_p_Result(BRMonitoringPINVOKE.ArrayInt64_AddItems(swigCPtr, numItems, SWIGTYPE_p_signed___int64.getCPtr(NewData)), true);
    return ret;
  }

  public unsafe SWIGTYPE_p_Result RemoveAt(int iIndex) {
    SWIGTYPE_p_Result ret = new SWIGTYPE_p_Result(BRMonitoringPINVOKE.ArrayInt64_RemoveAt(swigCPtr, iIndex), true);
    return ret;
  }

  public unsafe SWIGTYPE_p_Result RemoveItem(SWIGTYPE_p_signed___int64 RemoveData) {
    SWIGTYPE_p_Result ret = new SWIGTYPE_p_Result(BRMonitoringPINVOKE.ArrayInt64_RemoveItem(swigCPtr, SWIGTYPE_p_signed___int64.getCPtr(RemoveData)), true);
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public unsafe int FindItem(SWIGTYPE_p_signed___int64 FindData) {
    int ret = BRMonitoringPINVOKE.ArrayInt64_FindItem(swigCPtr, SWIGTYPE_p_signed___int64.getCPtr(FindData));
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public unsafe SWIGTYPE_p_signed___int64 GetAt(uint iElement) {
    SWIGTYPE_p_signed___int64 ret = new SWIGTYPE_p_signed___int64(BRMonitoringPINVOKE.ArrayInt64_GetAt(swigCPtr, iElement), false);
    return ret;
  }

}

}
