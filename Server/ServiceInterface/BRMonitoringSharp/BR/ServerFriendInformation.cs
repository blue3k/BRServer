//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.6
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BR {

public class ServerFriendInformation : FriendInformation {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ServerFriendInformation(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BRMonitoringPINVOKE.ServerFriendInformation_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ServerFriendInformation obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public unsafe int ShardID {
    set {
      BRMonitoringPINVOKE.ServerFriendInformation_ShardID_set(swigCPtr, value);
    } 
    get {
      int ret = BRMonitoringPINVOKE.ServerFriendInformation_ShardID_get(swigCPtr);
      return ret;
    } 
  }

  public unsafe ServerFriendInformation() : this(BRMonitoringPINVOKE.new_ServerFriendInformation__SWIG_0(), true) {
  }

  public unsafe ServerFriendInformation(ServerFriendInformation src) : this(BRMonitoringPINVOKE.new_ServerFriendInformation__SWIG_1(ServerFriendInformation.getCPtr(src)), true) {
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
  }

  public unsafe ServerFriendInformation(ulong playerID, int shardID, ulong fbUID, string nickName, uint level, uint weeklyWin, uint weeklyLose, byte isPlayingGame, ulong lastActiveTime, ulong LastStaminaSent) : this(BRMonitoringPINVOKE.new_ServerFriendInformation__SWIG_2(playerID, shardID, fbUID, nickName, level, weeklyWin, weeklyLose, isPlayingGame, lastActiveTime, LastStaminaSent), true) {
  }

  public unsafe ServerFriendInformation CopyFrom(ServerFriendInformation src) {
    ServerFriendInformation ret = new ServerFriendInformation(BRMonitoringPINVOKE.ServerFriendInformation_CopyFrom(swigCPtr, ServerFriendInformation.getCPtr(src)), false);
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public unsafe bool EqualTo(ServerFriendInformation src) {
    bool ret = BRMonitoringPINVOKE.ServerFriendInformation_EqualTo(swigCPtr, ServerFriendInformation.getCPtr(src));
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
