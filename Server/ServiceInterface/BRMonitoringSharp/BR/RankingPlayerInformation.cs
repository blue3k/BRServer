//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.6
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace BR {

public class RankingPlayerInformation : PlayerInformation {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal RankingPlayerInformation(global::System.IntPtr cPtr, bool cMemoryOwn) : base(BRMonitoringPINVOKE.RankingPlayerInformation_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RankingPlayerInformation obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public unsafe uint WeeklyWin {
    set {
      BRMonitoringPINVOKE.RankingPlayerInformation_WeeklyWin_set(swigCPtr, value);
    } 
    get {
      uint ret = BRMonitoringPINVOKE.RankingPlayerInformation_WeeklyWin_get(swigCPtr);
      return ret;
    } 
  }

  public unsafe uint WeeklyLose {
    set {
      BRMonitoringPINVOKE.RankingPlayerInformation_WeeklyLose_set(swigCPtr, value);
    } 
    get {
      uint ret = BRMonitoringPINVOKE.RankingPlayerInformation_WeeklyLose_get(swigCPtr);
      return ret;
    } 
  }

  public unsafe RankingPlayerInformation() : this(BRMonitoringPINVOKE.new_RankingPlayerInformation__SWIG_0(), true) {
  }

  public unsafe RankingPlayerInformation(RankingPlayerInformation src) : this(BRMonitoringPINVOKE.new_RankingPlayerInformation__SWIG_1(RankingPlayerInformation.getCPtr(src)), true) {
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
  }

  public unsafe RankingPlayerInformation(ulong playerID, ulong fbUID, string nickName, uint level, uint weeklyWin, uint weeklyLose, byte isPlayingGame, ulong lastActiveTime) : this(BRMonitoringPINVOKE.new_RankingPlayerInformation__SWIG_2(playerID, fbUID, nickName, level, weeklyWin, weeklyLose, isPlayingGame, lastActiveTime), true) {
  }

  public unsafe RankingPlayerInformation CopyFrom(RankingPlayerInformation src) {
    RankingPlayerInformation ret = new RankingPlayerInformation(BRMonitoringPINVOKE.RankingPlayerInformation_CopyFrom(swigCPtr, RankingPlayerInformation.getCPtr(src)), false);
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public unsafe bool EqualTo(RankingPlayerInformation src) {
    bool ret = BRMonitoringPINVOKE.RankingPlayerInformation_EqualTo(swigCPtr, RankingPlayerInformation.getCPtr(src));
    if (BRMonitoringPINVOKE.SWIGPendingException.Pending) throw BRMonitoringPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
